volumes:
  projects_catalogue:
  mongodb_data:
  tasks_catalogue:
  postgres_data:
  redis_session_data:
    driver: local
  postgres_users_data:

networks:
  keycloak-network:
    driver: bridge

services:
  projects_db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=projects_db
    volumes:
      - projects_catalogue:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5434:5432"


  task_notes_mongo_db:
    container_name: task_notes_mongo_db
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: alexgls
      MONGO_INITDB_ROOT_PASSWORD: AS04SERa1
      MONGO_INITDB_DATABASE: task_notes
    ports:
      - "127.0.0.1:27017:27017"
    volumes:
      - mongodb_data:/data/db

  tasks_db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=tasks_db
    volumes:
      - tasks_catalogue:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5433:5432"

  postgres-users:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: users_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    volumes:
      - postgres_users_data:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5436:5432"
    networks:
      - keycloak-network


  postgres-keycloak:
    image: postgres:16
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - keycloak-network
    restart: unless-stopped
    healthcheck:
      # Команда для проверки готовности Postgres
      test: [ "CMD-SHELL", "pg_isready -U keycloak -d keycloak" ]
      interval: 10s
      timeout: 5s
      retries: 5


  keycloak:
    image: quay.io/keycloak/keycloak:26.1.4
    environment:
      KC_DB: postgres             # Тип БД
      KC_DB_URL_HOST: postgres-keycloak
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KEYCLOAK_IMPORT: ./realm-config.json


      KC_HTTP_ENABLED: 'true'     # Разрешаем HTTP для start-dev
      KC_HOSTNAME_STRICT: 'false' # Отключаем строгую проверку hostname для start-dev

      EXTERNAL_DB_URL: "jdbc:postgresql://postgres-users:5432/users_db"
      EXTERNAL_DB_USER: "postgres"
      EXTERNAL_DB_PASSWORD: "admin"


    command:
      - start-dev
      -  --import-realm
      -  --log-level=DEBUG
    ports:
      - "8090:8080"
    volumes:
      - ./realm-export.json:/opt/keycloak/data/import/realm-config.json:ro
      - ./RegistrationEventListener.jar:/opt/keycloak/providers/RegistrationEventListener.jar
    depends_on:
      postgres-keycloak:
        condition: service_healthy
    networks:
      - keycloak-network
    restart: unless-stopped

  redis_session_store:
    restart: always
    image: redis:7-alpine
    container_name: redis-session-store
    hostname: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_session_data:/data # <-- Том для персистентности данных Redis
    command: redis-server --requirepass redis_AS04SERa1