server:
  port: 8086
  forward-headers-strategy: FRAMEWORK
  servlet:
    session:
      cookie:
        path: /
      timeout: 86400

keycloak:
  auth-server-url: http://localhost:8090
  realm: task-manager-realm
  username: admin
  password: admin
  client-id: spring-auth-app
  token-store: cookie
  enable-persistent-tokens: true
  remember-me: true

  admin-realm: master
  admin-username: admin
  admin-password: admin
  admin-client-id: admin-cli
  client-secret: Lkb2AN5HmkgNt6YaULT8IuREsdVMossd

frontend:
  redirect:
    uri: http://localhost:8080/login-callback
  logout:
    redirect:
      uri: http://localhost:8080/home

spring:
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: spring-auth-app
            client-secret: "CjOqCisDEx7nOLYJwqvDw5tLpPdlEqMl"
            scope: openid,profile, email, view_projects, edit_projects, microprofile-jwt, offline_access
            redirect-uri: "http://localhost:8080/login/oauth2/code/keycloak" # <--- ИЗМЕНЕНИЕ ЗДЕСЬ
        provider:
          keycloak:
            issuer-uri: http://localhost:8090/realms/task-manager-realm
            user-name-attribute: preferred_username

  redis:
    session:
      timeout: 86400 #24 часа
      store-type: redis
      redis:
        flush-mode: on_save
  data:
    redis:
      host: localhost
      password: redis_AS04SERa1
      port: 6379


logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.security.oauth2.client: TRACE

    org.springframework.session: DEBUG # или TRACE
    org.springframework.security.oauth2.core: TRACE

services:
  users:
    uri: http://localhost:8084
